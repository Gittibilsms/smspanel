<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name=" Enter Company Details" xml:space="preserve">
    <value> Enter Company Details</value>
  </data>
  <data name="Add Company" xml:space="preserve">
    <value>Add Company</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="API" xml:space="preserve">
    <value>API</value>
  </data>
  <data name="API Management" xml:space="preserve">
    <value>API Management</value>
  </data>
  <data name="Average monthly sale for every author" xml:space="preserve">
    <value>Average monthly sale for every author</value>
  </data>
  <data name="Canceled" xml:space="preserve">
    <value>Canceled</value>
  </data>
  <data name="Cannot send support request" xml:space="preserve">
    <value>Cannot send support request</value>
  </data>
  <data name="Choose API" xml:space="preserve">
    <value>Choose API</value>
  </data>
  <data name="Companies" xml:space="preserve">
    <value>Companies</value>
  </data>
  <data name="Company Information" xml:space="preserve">
    <value>Company Information</value>
  </data>
  <data name="Company Name" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="Company Users" xml:space="preserve">
    <value>Company Users</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="Created By" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="Creation Date" xml:space="preserve">
    <value>Creation Date</value>
  </data>
  <data name="Credit Topups" xml:space="preserve">
    <value>Credit Topups</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="Date of Sending" xml:space="preserve">
    <value>Date of Sending</value>
  </data>
  <data name="Dateofshipment" xml:space="preserve">
    <value>Date of shipment (future order)</value>
  </data>
  <data name="Dealers" xml:space="preserve">
    <value>Dealers</value>
  </data>
  <data name="Delivered" xml:space="preserve">
    <value>Delivered</value>
  </data>
  <data name="Directory" xml:space="preserve">
    <value>Directory</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Filemessage1" xml:space="preserve">
    <value>Maximum file size is 25 MB. (excel, csv, txt) </value>
  </data>
  <data name="Filemessage2" xml:space="preserve">
    <value>In your Excel and csv files, phone numbers must be in column 'A'.</value>
  </data>
  <data name="Firm" xml:space="preserve">
    <value>Firm</value>
  </data>
  <data name="from last month" xml:space="preserve">
    <value>from last month</value>
  </data>
  <data name="High (Unit price for SMS over 1,000,000)" xml:space="preserve">
    <value>High (Unit price for SMS over 1,000,000)</value>
  </data>
  <data name="Invalid Numbers" xml:space="preserve">
    <value>Invalid Numbers</value>
  </data>
  <data name="Loaded" xml:space="preserve">
    <value>Loaded</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Low (1-500,000 SMS unit price)" xml:space="preserve">
    <value>Low (1-500,000 SMS unit price)</value>
  </data>
  <data name="Management" xml:space="preserve">
    <value>Management</value>
  </data>
  <data name="Medium (500,000-1,000,000 SMS unit price)" xml:space="preserve">
    <value>Medium (500,000-1,000,000 SMS unit price)</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="MessageText" xml:space="preserve">
    <value>Special characters are counted as 2 characters.</value>
  </data>
  <data name="Monthly Revenue" xml:space="preserve">
    <value>Monthly Revenue</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="New Order" xml:space="preserve">
    <value># New Order</value>
  </data>
  <data name="Numbers" xml:space="preserve">
    <value>Numbers</value>
  </data>
  <data name="On Hold" xml:space="preserve">
    <value>On Hold</value>
  </data>
  <data name="Operation" xml:space="preserve">
    <value>Operation</value>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Password Information" xml:space="preserve">
    <value>Password information must be at least 8 characters, contain at least 1 uppercase letter, 1 lowercase letter, 1 number and 1 special character.</value>
  </data>
  <data name="Past messages" xml:space="preserve">
    <value>Past messages</value>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="Pricing" xml:space="preserve">
    <value>Pricing</value>
  </data>
  <data name="Processed" xml:space="preserve">
    <value>Processed</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Recent Orders" xml:space="preserve">
    <value>Recent Orders</value>
  </data>
  <data name="Refund" xml:space="preserve">
    <value>Refund</value>
  </data>
  <data name="Refundable" xml:space="preserve">
    <value>Refundable</value>
  </data>
  <data name="Reports" xml:space="preserve">
    <value>Reports</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Return Date" xml:space="preserve">
    <value>Return Date</value>
  </data>
  <data name="Returned" xml:space="preserve">
    <value>Returned</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Sendsms" xml:space="preserve">
    <value>Send New SMS</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Submission Type" xml:space="preserve">
    <value>Submission Type</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Support Requests" xml:space="preserve">
    <value>Support Requests</value>
  </data>
  <data name="Telephone" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="Today sms sent" xml:space="preserve">
    <value>Today's Sms Sent</value>
  </data>
  <data name="Total Amount" xml:space="preserve">
    <value>Total Amount</value>
  </data>
  <data name="Trusted sender" xml:space="preserve">
    <value>Trusted sender</value>
  </data>
  <data name="Unsuccessful" xml:space="preserve">
    <value>Unsuccessful</value>
  </data>
  <data name="User Information" xml:space="preserve">
    <value>User Information</value>
  </data>
  <data name="User name" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="welcome" xml:space="preserve">
    <value>Welcome!</value>
  </data>
  <data name="Welcome Back" xml:space="preserve">
    <value>Welcome Back</value>
  </data>
</root>